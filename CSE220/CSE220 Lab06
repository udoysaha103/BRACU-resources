{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOT9QN3rgjgIL0AoZjz37+/"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"e4JozwYlVDO0","executionInfo":{"status":"ok","timestamp":1669624174061,"user_tz":-360,"elapsed":8,"user":{"displayName":"UDOY SAHA","userId":"17105537020042935758"}},"outputId":"e28328b1-8aaa-43ab-d369-caf8d1ec1382"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["720"]},"metadata":{},"execution_count":14}],"source":["# task 1 (a)\n","# finding factorial\n","\n","def factorial(n):\n","  if n<0:\n","    raise ValueError(\"Invalid number\")\n","  elif n < 2:\n","    return 1\n","  else:\n","    return n * factorial(n-1)\n","\n","factorial(6)"]},{"cell_type":"code","source":["# task 1 (b)\n","# n-th fibonacchi number\n","\n","def nth_fib(n):\n","  if n<=0:\n","    raise ValueError(\"Invalid number\")\n","  elif n <= 2:\n","    return n-1\n","  else:\n","    return nth_fib(n-2)+nth_fib(n-1)\n","\n","nth_fib(7)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kX-EqLeRWyoh","executionInfo":{"status":"ok","timestamp":1669625064023,"user_tz":-360,"elapsed":10,"user":{"displayName":"UDOY SAHA","userId":"17105537020042935758"}},"outputId":"51633269-3095-4bb0-896c-1bdf4fec6cdb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["8"]},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["# task 1 (c)\n","# array element printing\n","\n","def print_array(array, index = 0):\n","  if (index < 0) or (index >= len(array)):\n","    return IndexError(\"Index is out of range\")\n","  elif index == len(array) - 1:\n","    print(f\", {array[index]}\", end = \"\")\n","    return\n","  else:\n","    if index == 0:\n","      print(array[index], end = \"\")\n","    else:\n","      print(f\", {array[index]}\", end = \"\")\n","    print_array(array, index+1)\n","    return\n","\n","print_array([1, 2, 3])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nC_dRvSDaMj_","executionInfo":{"status":"ok","timestamp":1669625615509,"user_tz":-360,"elapsed":7,"user":{"displayName":"UDOY SAHA","userId":"17105537020042935758"}},"outputId":"425bf2bc-79ed-4870-d084-a6d643a780f7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1, 2, 3"]}]},{"cell_type":"code","source":["# task 1 (d)\n","# base to the power calculator\n","\n","def powerN(base, power):\n","  if power == 1:\n","    return base\n","  else:\n","    return base * powerN(base, power-1)\n","\n","print(powerN(3,3))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mZtyclVKcg6b","executionInfo":{"status":"ok","timestamp":1669626731578,"user_tz":-360,"elapsed":339,"user":{"displayName":"UDOY SAHA","userId":"17105537020042935758"}},"outputId":"5463722c-7826-4c9f-acac-b34b181ae805"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["27\n"]}]},{"cell_type":"code","source":["# task 2 (a)\n","# decimal to binary\n","\n","def dec2bin(n):\n","  if n == 0:\n","    return \"0\"\n","  elif n == 1:\n","    return \"1\"\n","  elif n == -1:\n","    return \"-1\"\n","  else:\n","    remainder = n % 2\n","    bin = \"\"\n","    if n > 0:\n","      bin = dec2bin(n//2)\n","    elif n < 0:\n","      if remainder != 0:\n","        bin = dec2bin((n//2)+1)\n","      else:\n","        bin = dec2bin(n//2)\n","    bin += str(remainder)\n","    return bin\n","\n","print(dec2bin(-9))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tJpL1tJ5giWo","executionInfo":{"status":"ok","timestamp":1669627976682,"user_tz":-360,"elapsed":9,"user":{"displayName":"UDOY SAHA","userId":"17105537020042935758"}},"outputId":"c49850b5-f3a1-458a-baaa-c7b91152fed9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["-1001\n"]}]},{"cell_type":"code","source":["# task 2 (b)\n","# sum of linked list\n","\n","class Node:\n","  def __init__(self, data = None, next = None):\n","    self.data = data\n","    self.next = next\n","\n","class Singly_Linked_List:\n","  def __init__(self, a):\n","    self.head = None\n","    current_node = None\n","\n","    if isinstance(a, list):\n","      for index in range(len(a)):\n","        new_node = Node(a[index], None)\n","\n","        if self.head == None:\n","          self.head = current_node = new_node\n","        else:\n","          current_node.next = new_node\n","          current_node = new_node\n","    else:\n","      self.head = a\n","\n","\n","  def list_adder(self, head):\n","    if head == None:\n","      return 0\n","    else:\n","      return head.data + self.list_adder(head.next)\n","\n","\n","linked_list_1 = Singly_Linked_List([1, 2, 3, 4])\n","print(linked_list_1.list_adder(linked_list_1.head))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oyeux2n3joIb","executionInfo":{"status":"ok","timestamp":1669630747507,"user_tz":-360,"elapsed":380,"user":{"displayName":"UDOY SAHA","userId":"17105537020042935758"}},"outputId":"19ef9119-729d-4d6a-a37f-c9b4ec6d0740"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["10\n"]}]},{"cell_type":"code","source":["# task 2 (c)\n","# reverse printing\n","\n","class Node:\n","  def __init__(self, data = None, next = None):\n","    self.data = data\n","    self.next = next\n","\n","class Singly_Linked_List:\n","  def __init__(self, a):\n","    self.head = None\n","    current_node = None\n","\n","    if isinstance(a, list):\n","      for index in range(len(a)):\n","        new_node = Node(a[index], None)\n","\n","        if self.head == None:\n","          self.head = current_node = new_node\n","        else:\n","          current_node.next = new_node\n","          current_node = new_node\n","    else:\n","      self.head = a\n","  \n","\n","  def reversed_print(self, node):\n","    if node == None:\n","      return\n","    else:\n","      self.reversed_print(node.next)\n","      print(node.data)\n","\n","\n","linked_list_2 = Singly_Linked_List([10, 20, 30, 40])\n","linked_list_2.reversed_print(linked_list_2.head)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OzBjkRa0pHnm","executionInfo":{"status":"ok","timestamp":1669629583346,"user_tz":-360,"elapsed":366,"user":{"displayName":"UDOY SAHA","userId":"17105537020042935758"}},"outputId":"6d86a0bf-f5ee-4908-8642-f0c5eedff64a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["40\n","30\n","20\n","10\n"]}]},{"cell_type":"code","source":["# task 3\n","# card counter to build a house\n","\n","def hocBuilder(height): \n","  if height == 0:\n","    return 0\n","  elif height == 1:\n","    return 8\n","  else:\n","    return 5 + hocBuilder(height-1)\n","\n","print(hocBuilder(3))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sAMqaHS_wtyC","executionInfo":{"status":"ok","timestamp":1669631286059,"user_tz":-360,"elapsed":411,"user":{"displayName":"UDOY SAHA","userId":"17105537020042935758"}},"outputId":"fd6d3883-b29b-4703-947a-951c2c25d099"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["18\n"]}]},{"cell_type":"code","source":["# task 4 (a)\n","# pattern printer 1\n","\n","def num_print(n):\n","  if n == 1:\n","    print(1, end = \"\")\n","  else:\n","    num_print(n-1)\n","    print(f\" {n}\", end = \"\")\n","\n","def pattern_print(n):\n","  if n == 1:\n","    print(1)\n","  else:\n","    pattern_print(n-1)\n","\n","    num_print(n)\n","    print()\n","\n","\n","pattern_print(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-6VdbosWrgnb","executionInfo":{"status":"ok","timestamp":1669630309011,"user_tz":-360,"elapsed":447,"user":{"displayName":"UDOY SAHA","userId":"17105537020042935758"}},"outputId":"1a107e92-5f75-428e-b3f0-8fe61285b96e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1\n","1 2\n","1 2 3\n","1 2 3 4\n","1 2 3 4 5\n"]}]},{"cell_type":"code","source":["# task 4 (b)\n","# pattern printer 2\n","\n","def space_print(n):\n","  if n == 1:\n","    print(\"  \", end = \"\")\n","  else:\n","    space_print(n-1)\n","    print(\"  \", end = \"\")\n","\n","def num_print(n):\n","  if n == 1:\n","    print(1, end = \"\")\n","  else:\n","    num_print(n-1)\n","    print(f\" {n}\", end = \"\")\n","\n","def pattern_print(n, line = 1):\n","  if line == n:\n","    num_print(line)\n","  else:\n","    space_print(n-line)\n","    num_print(line)\n","    print()\n","\n","    pattern_print(n, line + 1)\n","\n","\n","pattern_print(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VEMT2dpUUXOS","executionInfo":{"status":"ok","timestamp":1670225359766,"user_tz":-360,"elapsed":8,"user":{"displayName":"UDOY SAHA","userId":"17105537020042935758"}},"outputId":"4c62d55c-4b99-4fcf-917d-5cc4b235a89a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["        1\n","      1 2\n","    1 2 3\n","  1 2 3 4\n","1 2 3 4 5"]}]},{"cell_type":"code","source":["# task 05\n","# profit calculator\n","\n","import sys\n","sys.setrecursionlimit(150000)\n","\n","class FinalQ: \n","  def print(self,array,idx): \n","    if(idx<len(array)): \n","      profit = self.calcProfit(array[idx])\n","      print(f\"{idx+1}. Investment: {array[idx]}; Profit: {'%.1f' % profit}\")\n","\n","      self.print(array, idx+1)\n","    else:\n","      return\n","  \n","  def calcProfit(self,investment): \n","    if investment == 25000:\n","      return 0\n","    else:\n","      if investment > 100000:\n","        return 8 + self.calcProfit(investment - 100)\n","      else:\n","        return 4.5 + self.calcProfit(investment - 100)\n","\n","  \n","#Tester \n","array=[25000,100000,250000,350000] \n","f = FinalQ() \n","f.print(array,0)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"y10k-Cn0MTXD","executionInfo":{"status":"ok","timestamp":1670235845366,"user_tz":-360,"elapsed":1091,"user":{"displayName":"UDOY SAHA","userId":"17105537020042935758"}},"outputId":"91295d65-d8f3-4dc4-af9a-a87e7c3825c1"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["1. Investment: 25000; Profit: 0.0\n","2. Investment: 100000; Profit: 3375.0\n","3. Investment: 250000; Profit: 15375.0\n","4. Investment: 350000; Profit: 23375.0\n"]}]}]}