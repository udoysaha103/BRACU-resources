{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPJFBWUL0OUBu68F6sfXcQ1"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7Tu52afSX5nN","executionInfo":{"status":"ok","timestamp":1670231930222,"user_tz":-360,"elapsed":634,"user":{"displayName":"UDOY SAHA","userId":"17105537020042935758"}},"outputId":"f67c2301-63de-4e1d-eb10-9aec45886f72"},"outputs":[{"output_type":"stream","name":"stdout","text":["True\n","[-1, 2, 3, 5]\n"]}],"source":["# task 1\n","\n","class KeyIndex:\n","  def __init__(self, a):\n","    # determining total numbers\n","    highest = a[0]\n","    lowest = a[0]\n","\n","    for index in range(1, len(a)):\n","      if a[index] > highest:\n","        highest = a[index]\n","      elif a[index] < lowest:\n","        lowest = a[index]\n","    \n","    total_numbers = highest - lowest +1\n","\n","    # creating the auxilliary array\n","    self.k = [0] * total_numbers\n","    self.key = -lowest\n","\n","    for index in range(len(a)):\n","      self.k[a[index] + self.key] += 1\n","  \n","\n","  def search(self, val):\n","    try:\n","      index = val + self.key\n","\n","      if index < 0:\n","        return False\n","\n","      if self.k[index] > 0:\n","        return True\n","      else:\n","        return False\n","        \n","    except IndexError:\n","      return False\n","  \n","\n","  def sort(self):\n","    length = 0\n","    for index in range(len(self.k)):\n","      length += self.k[index]\n","    \n","    sorted_array = [None] * length\n","    index = 0\n","\n","    for offset in range(len(self.k)):\n","      frequency = self.k[offset]\n","      value = offset - self.key\n","\n","      for _ in range(frequency):\n","        sorted_array[index] = value\n","        index += 1\n","    \n","    return sorted_array\n","\n","\n","obj = KeyIndex([2,-1,3,5])\n","print(obj.search(-1))\n","print(obj.sort())"]},{"cell_type":"code","source":["# task 2\n","\n","class Hashing:\n","  def __init__(self, a):\n","    self.hash_table = [None] * 9\n","\n","    for string in a:\n","      self.hash_table[self.find_key(string)] = string\n","  \n","\n","  def find_key(self, string):\n","    # hash value calculation\n","    sum = 0\n","    consonant_count = 0\n","\n","    for index in range(len(string)):\n","      if (string[index] >= '0') and (string[index] <= '9'):\n","        sum += int(string[index])\n","      elif string[index].lower() not in ['a', 'e', 'i', 'o', 'u']:\n","        consonant_count += 1\n","    \n","    sum += consonant_count * 24\n","    sum %= 9\n","\n","    # linear probing\n","    while self.hash_table[sum] != None:\n","      sum = (sum + 1) % 9\n","\n","    return sum\n","\n","\n","obj = Hashing(['ST1E89B8A32', 'ev', 'i', '4o', 'u', 'j', 'j', 'j'])\n","print(obj.hash_table)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"le1lg7QGlc1H","executionInfo":{"status":"ok","timestamp":1670234544467,"user_tz":-360,"elapsed":578,"user":{"displayName":"UDOY SAHA","userId":"17105537020042935758"}},"outputId":"88b887a1-5e63-4596-a56d-4b1fd8804db4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['i', 'u', 'j', None, 'ST1E89B8A32', '4o', 'ev', 'j', 'j']\n"]}]}]}